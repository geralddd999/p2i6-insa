Document d’Architecture Technique (DAT)
1. Socle Technique
Back-end

    Langage : Python 3.11+

    Framework : FastAPI

    Serveur ASGI : Uvicorn

    Base de données : SQLite 3 (intégrée, fichier .db)

    Authentification API : via API_TOKEN (token HTTP simple)

    Fonctionnalités :

        Upload de fichiers CSV et images

        Stockage hiérarchique par date/type

        Vue tableau de bord + arbre des données

        Interface de maintenance (statut, logs)

Front-end

    Type : Front-end intégré via Jinja2

    Technos :

        HTML + CSS basiqueDocument d’Architecture Technique (DAT)


2.Client (Raspberry Pi 2 model B)

    un Raspberry déja reglé

    Permet d'envoyer régulièrement de données capteurs (CSV) et images avec un intervalle réglable
    Script Python envoie périodiquement :

    POST /upload avec image ou CSV

    POST /health avec JSON (ex : température, uptime)

    POST /error en cas d’échec local

Le client utilise le token d’authentification

3. Prérequis pour l’hébergement

Élément	        Recommandation minimale
OS	              Linux (Debian/Ubuntu)
CPU	              1 vCPU
RAM	              512 Mo
Stockage	      ≥ 10 Go
Port	          8000 (HTTP API)

4. Base de données SQLite (locale)

Chemin : data/insect_data.db

Tables
-uploads
Champ	    Type	        Description
id	       INTEGER	    PK, autoincrément
day	        TEXT	    Date au format YYYY-MM-DD
csv_path	TEXT	    Chemin vers le fichier CSV
created_at	TEXT	    Timestamp automatique
-photos
Champ	    Type	        Description
id	        INTEGER	    PK
upload_id	INTEGER	    FK → uploads(id), en cascade
file_path	TEXT	    Chemin image
-health
Champ	    Type	        Description
id	        INTEGER	    PK
upload_id	INTEGER	    FK → uploads(id)
payload	    TEXT	    JSON sérialisé
created_at	TEXT	    Timestamp
-errors
Champ	    Type	    Description
id	        INTEGER	    PK
upload_id	INTEGER	    FK → uploads(id)
payload	    TEXT	    JSON sérialisé
created_at	TEXT	    Timestamp

4. Estimation de l’espace disque
Structure de fichiers

    Racine /data/ organisée par date/type :

    /data/
      /2025-06/
        /images/
          img_001.jpg
        /csv/
          data_001.csv

Estimation de taille (par mois)
Type de fichier	    Taille moyenne	    Fréquence (ex.)	    Espace mensuel
Images	            300 Ko	            96/jour	            ~840 Mo
CSV capteurs	     5 Ko	            96/jour	            ~15 Mo
Total	—	—	~855 Mo

Une rétention de 6 mois = ~5,5 Go, sans compression.
Disque SSD ≥ 10 Go recommandé
Sauvegarde automatique hebdomadaire conseillée


6. Commandes de lancement
--Sans Docker

git clone https://github.com/geralddd999/p2i6-insa.git
cd insect_hub_project
python -m venv venv
source venv/bin/activate
pip install -r requirements.txt
export API_TOKEN=secret-token
uvicorn insect_hub.main:app --reload

Simulation d’upload

python client/cli_simulator.py --interval 15

7. Interface Web

    Accessible via http://<serveur>:8000

    Navigation :

        Dashboard : résumé des uploads récents

        Arborescence : navigation par mois

        Maintenance : /status, /summary